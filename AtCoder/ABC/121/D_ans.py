# -*- coding: utf-8 -*-

A, B = map(int, input().split())

# 連続数であることが手掛かりになると思われる。
# f(A,B): A, A+1, ..., Bの排他的論理和を考える
# f(A,B): AのB-A個のXOR(偶数なら0、奇数ならA)と 0,1,2,...,B-AのXORのXOR
#
# 1: B-A個のXOR(偶数なら0、奇数なら1)
# 2: B-A-1個のXOR(偶数なら0、奇数なら1)
# 3: B-A-2個のXOR(偶数なら0、奇数なら1)
# ...
# B-A-1: 1個

# 結局わからないので解答見ながら記述。
# n XOR n=0から、A,Bで分離して、
# ※ 0=(1+...+A-1) XOR (1+...+A-1) を加える
# f(A,B) = f(1,A-1) XOR f(1,B)
# また、偶数nとn+1について、偶数の下1桁のビットは0なので、n XOR n+1 = 1
# よって、偶数個or奇数個で分けて計算すればいい。

# f(0, n): n+1個
# n+1が偶数
# * (n+1)//2が偶数: 1が偶数個=0
# * (n+1)//2が奇数: 1が奇数個=1
# n+1が奇数
# * (n+1)//2が偶数: n xor 1が偶数個=0
# * (n+1)//2が奇数: n xor 1が奇数個=1

def func(N):
    n = (N+1)//2
    if (N+1) % 2 == 0:
        if n % 2 == 0:
            return 0
        else:
            return 1
    else:
        if n % 2 == 0:
            return N
        else:
            return N^1

a = func(A-1)
b = func(B)
print(a^b)
